name: CI

on:
  push: 
    branches: [ main ]
  pull_request: 
    branches: [ main ]

jobs:
  build:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install nim
        uses: iffy/install-nim@v4
        with:
          version: binary:1.6.8

      - name: Build
        run: |
          ./scripts/install.sh
          ./scripts/build.sh

      - name: Upload build results
        uses: actions/upload-artifact@v3
        with:
          name: tg-to-pocket-${{ matrix.os }}
          path: build/*
          retention-days: 5

  build-and-push-image:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}